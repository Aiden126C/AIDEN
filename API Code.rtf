{\rtf1\ansi\ansicpg936\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 from flask import Flask, request, jsonify\
import openai\
\
app = Flask(__name__)\
\
# GPT API Key Configuration\
openai.api_key = 'your_openai_api_key'\
\
# Mock database for orders and products\
mock_orders = \{\
    "12345": \{"status": "Shipped", "delivery_date": "2024-12-25"\},\
    "67890": \{"status": "Processing", "delivery_date": "2024-12-20"\}\
\}\
\
mock_products = \{\
    "001": \{"name": "Wireless Headphones", "price": "$99", "stock": "In Stock"\},\
    "002": \{"name": "Smartwatch", "price": "$199", "stock": "Out of Stock"\}\
\}\
\
# Helper function to interact with GPT\
def get_gpt_response(prompt):\
    try:\
        response = openai.Completion.create(\
            engine="text-davinci-003",\
            prompt=prompt,\
            max_tokens=100,\
            temperature=0.7\
        )\
        return response.choices[0].text.strip()\
    except Exception as e:\
        return f"Error generating response: \{e\}"\
\
@app.route('/api/chat', methods=['POST'])\
def chat():\
    data = request.json\
    user_message = data.get('message')\
    \
    # GPT-Enhanced Response\
    prompt = f"User: \{user_message\}\\nAssistant: Provide a helpful and friendly response."\
    gpt_response = get_gpt_response(prompt)\
    \
    return jsonify(\{"response": gpt_response\})\
\
@app.route('/api/order_status', methods=['GET'])\
def order_status():\
    order_id = request.args.get('order_id')\
    order = mock_orders.get(order_id)\
    if order:\
        return jsonify(\{"order_id": order_id, "status": order["status"], "delivery_date": order["delivery_date"]\})\
    else:\
        return jsonify(\{"error": "Order not found"\}), 404\
\
@app.route('/api/product_info', methods=['GET'])\
def product_info():\
    product_id = request.args.get('product_id')\
    product = mock_products.get(product_id)\
    if product:\
        return jsonify(\{"product_id": product_id, "name": product["name"], "price": product["price"], "stock": product["stock"]\})\
    else:\
        return jsonify(\{"error": "Product not found"\}), 404\
\
@app.route('/api/feedback', methods=['POST'])\
def feedback():\
    data = request.json\
    feedback_message = data.get('feedback')\
    # Log feedback for future improvements\
    print(f"Feedback received: \{feedback_message\}")\
    return jsonify(\{"message": "Thank you for your feedback!"\})\
\
if __name__ == '__main__':\
    app.run(debug=True)}